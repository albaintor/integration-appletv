# GitHub Action to build a self contained binary of the Apple TV Python driver
---
name: "Build & Release"

on:
  workflow_dispatch:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
#   pull_request:
#     branches:
#       - main
#     types: [ opened, synchronize, reopened ]

env:
  INTG_NAME: appletv
  HASH_FILENAME: uc-intg-appletv.hash
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Prepare
        run: |
          pwd
          ls -lsa
          
          sudo apt-get update && sudo apt-get install -y qemu binfmt-support qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker run --name builder --platform=aarch64 -v {$GITHUB_WORKSPACE}:/io" -d ubuntu:focal tail -f /dev/null
          
          docker exec builder bash -c "cd /io && pwd && ls -lsa"
          docker exec builder bash -c "apt-get update && apt-get install -y python3-pip"
          docker exec builder bash -c "pip3 install pyinstaller -r requirements.txt"
          docker exec builder bash -c "pyinstaller --clean --onfile --name intg-appletv driver.py"
          
      - name: Copy artifacts
        run: |
          mkdir -p artifacts
          cp dist/intg-appletv artifacts/
            
      - name: Fetch all tags to determine version
        run: |
          git fetch origin +refs/tags/*:refs/tags/*
          echo "VERSION=$(git describe --match "v[0-9]*" --tags HEAD --always)" >> $GITHUB_ENV
          
      - name: add version
        run: |
          cd artifacts
          echo ${{ env.VERSION }} > version.txt
                
      - name: Test
        run: |
          ls -al "${PWD}"
          
      - name: Create upload artifact
        shell: bash
        run: |
          echo "ARTIFACT_NAME=uc-intg-${{ env.INTG_NAME }}-${{ env.VERSION }}" >> $GITHUB_ENV
          tar czvf ${{ env.ARTIFACT_NAME }}.tar.gz -C ${{ env.UC_BIN }} .
          ls -lah
          
      - uses: actions/upload-artifact@v3
        id: upload_artifact
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}.tar.gz
          if-no-files-found: error
          retention-days: 3
            
            
